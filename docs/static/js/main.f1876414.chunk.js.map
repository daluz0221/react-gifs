{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategory","useState","inputValue","setInputValue","onSubmit","e","trim","length","ele","preventDefault","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","imp","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","useFetchGifs","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"2MA2CeA,EAxCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAGCC,mBAAS,IAHV,mBAG5BC,EAH4B,KAGhBC,EAHgB,KAsBnC,OAGQ,sBAAMC,SAfO,SAACC,GAGdH,EAAWI,OAAOC,OAAS,IAC3BP,GAAa,SAAAQ,GAAG,OAAMN,GAAN,mBAAqBM,OACrCL,EAAc,KAIlBE,EAAEI,kBAME,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAxBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDAEwBC,UAAUH,GAFlC,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAItCa,QAAQC,IAAIR,GAdQ,kBAebA,GAfa,4CAAH,sDCWNS,EAbK,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAK7B,OAFAa,QAAQC,IAAIL,EAAIC,EAAOV,GAGnB,sBAAKgB,UAAU,2CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCsBDS,EA3BC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAGdd,mBACtB,CACIqB,KAAK,GACLe,SAAQ,IANwB,mBAGjCC,EAHiC,KAG1BC,EAH0B,KAoCxC,OAzBAC,qBAAU,WAEN1B,EAASC,GACJ0B,MACG,SAAAC,GAMQH,EAAS,CACLjB,KAAKoB,EACLL,SAAS,SAQ9B,CAACtB,IAKGuB,EDhCuBK,CAAa5B,GAAhCa,EAHmB,EAGxBN,KAAae,EAHW,EAGXA,QASrB,OAPAP,QAAQC,IAAIM,GAQV,qCACE,6BAAKtB,IAEJsB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SACGL,EAAOJ,KAAI,SAACJ,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAbA,EAAKM,aEelBkB,EApCM,WAAO,IAAD,EAKS3C,mBAAS,CAAC,cALnB,mBAKhBc,EALgB,KAKNf,EALM,KAYvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,YAAaA,IAE1B,uBAIA,6BAEQe,EAASS,KAAI,SAACT,EAAU8B,GAAX,OACR,cAAC,EAAD,CAEA9B,SAAUA,GADLA,YCxB9B+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.f1876414.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = ({setCategory}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n       \r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        // console.log('sumbit hecho');\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory( ele => [ inputValue, ...ele ]);\r\n            setInputValue('');\r\n            \r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n      \r\n            \r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n     \r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategory:PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd;\r\n","\r\n\r\n\r\n\r\nexport const getGifts = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=GxfOLRvaB0uyzjveZp9TxwS4yxtOtmoA`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((imp) => {\r\n      return {\r\n        id: imp.id,\r\n        title: imp.title,\r\n        url: imp.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    console.log(gifs);\r\n    return gifs\r\n  };\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import getGifts from \"../helpers/getGifts\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n\r\n  const { data:images, loading} = useFetchGifs(category);\r\n\r\n  console.log(loading);\r\n\r\n  // const [images, setimages] = useState([]);\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && <p>Loading</p>}\r\n      \r\n      <div className=\"card-grid\">\r\n        {images.map((resp) => (\r\n          <GifGridItem key={resp.id} {...resp} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifts} from '../helpers/getGifts'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n\r\n    const [state, setState] = useState(\r\n        {\r\n            data:[],\r\n            loading:true\r\n        }\r\n    );\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        getGifts(category)\r\n            .then(\r\n                img => {\r\n\r\n\r\n                  \r\n\r\n                        \r\n                        setState({\r\n                            data:img,\r\n                            loading: false\r\n                        });\r\n                \r\n                \r\n            })\r\n        \r\n\r\n\r\n    }, [category]);\r\n\r\n\r\n    \r\n\r\n    return state\r\n\r\n}","import React, {useState} from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  \r\n\r\n\r\n    const [category, setCategory] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategory([...category, \"Naruto\"]);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <CategoryAdd setCategory={setCategory} />\r\n\r\n            <hr />\r\n\r\n            \r\n\r\n            <ol>\r\n                {\r\n                    category.map((category, i) => \r\n                         <GifGrid \r\n                         key={category}\r\n                         category={category} \r\n                         />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n \n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}